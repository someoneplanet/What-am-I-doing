#!/data/data/com.termux/files/usr/bin/bash

# Exit if any command fails
set -e

# Step 1: Update and upgrade Termux packages
echo "Updating and upgrading Termux packages..."
pkg update && pkg upgrade -y

# Step 2: Install required packages
echo "Installing dependencies..."
pkg install -y git build-essential clang python python-dev libtool pkg-config \
  libglvnd-dev libvulkan-dev mesa sdl2 sdl2-dev cmake x11-repo proot-distro \
  termux-x11 xorg-x11-server-utils xterm x11-utils pulseaudio

# Step 3: Install and configure PulseAudio
echo "Starting PulseAudio over TCP..."
pulseaudio --start --load="module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1" --exit-idle-time=-1

# Step 4: Set up Termux X11 server
echo "Setting up Termux X11 session..."
export XDG_RUNTIME_DIR=${TMPDIR}
termux-x11 :0 >/dev/null &
sleep 3  # Wait for X11 server to start
am start --user 0 -n com.termux.x11/com.termux.x11.MainActivity > /dev/null 2>&1
sleep 1

# Step 5: Install and set up Ubuntu in PRoot
echo "Installing Ubuntu using proot-distro..."
proot-distro install ubuntu

# Step 6: Set up and build xemu
echo "Setting up xemu..."

# Clone the xemu repository
cd $HOME
git clone https://github.com/mborgerson/xemu.git
cd xemu

# Create build directory and run cmake
mkdir build
cd build
cmake ..

# Compile xemu
echo "Compiling xemu..."
make -j$(nproc)

# Step 7: Set up environment variables and run xemu in the proot environment
echo "Setting up environment variables and launching xemu..."

# Login to Ubuntu proot environment and start xemu
proot-distro login ubuntu --shared-tmp -- /bin/bash -c  '
  export PULSE_SERVER=127.0.0.1 &&
  export XDG_RUNTIME_DIR=${TMPDIR} &&
  sudo service dbus start &&
  su - droidmaster -c "env DISPLAY=:0 ./xemu"'

# Step 8: Completion message
echo "xemu setup completed. You should now be able to run xemu with X11 forwarding."

exit 0
